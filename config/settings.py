"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@kmt8^g%-5fcot_rt&&2(aawglvhh3x&!o#fp2n1c1i15%zww+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# django-allauth
SITE_ID = 1
LOGIN_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

################# django-allauthでのメール認証設定ここから ###################

# #djangoallauthでメールでユーザー認証する際に必要になる認証バックエンド
# AUTHENTICATION_BACKENDS = [
#     "django.contrib.auth.backends.ModelBackend",
#     "allauth.account.auth_backends.AuthenticationBackend",
# ]

# #ログイン時の認証方法はemailとパスワードとする
# ACCOUNT_AUTHENTICATION_METHOD   = "email"

# #ログイン時にユーザー名(ユーザーID)は使用しない
# ACCOUNT_USERNAME_REQUIRED       = True

# #ユーザー登録時に入力したメールアドレスに、確認メールを送信する事を必須(mandatory)とする
# ACCOUNT_EMAIL_VARIFICATION  = "mandatory"

# #ユーザー登録画面でメールアドレス入力を要求する(True)
# ACCOUNT_EMAIL_REQUIRED      = True


# #DEBUGがTrueのとき、メールの内容は全て端末に表示させる(実際にメールを送信したい時はここをコメントアウトする)
# if DEBUG:
#     EMAIL_BACKEND   = "django.core.mail.backends.console.EmailBackend"
# else:
#     #TODO:SendgridのAPIキーと送信元メールアドレスを入れていない時、以下が実行されると必ずエラーになる点に注意。
#     EMAIL_BACKEND       = "sendgrid_backend.SendgridBackend"
#     DEFAULT_FROM_EMAIL  = "ここにデフォルトの送信元メールアドレスを指定"

#     #【重要】APIキーの入力後、GitHubへのプッシュは厳禁。可能であれば.gitignoreに指定した別ファイルから読み込む
#     SENDGRID_API_KEY    = "ここにsendgridのAPIkeyを記述する"

#     #Sendgrid利用時はサンドボックスモードを無効化しておく。
#     SENDGRID_SANDBOX_MODE_IN_DEBUG = False
EMAIL_BACKEND   = "django.core.mail.backends.console.EmailBackend"

################# django-allauthでのメール認証設定ここまで ###################

# Application definition

INSTALLED_APPS = [
    "users.apps.UsersConfig",

    "oneall.apps.OneallConfig",
    "qa.apps.QaConfig",
    "qa.templatetags.custom_tag",
    "qa.templatetags.count_good",
    "chat.apps.ChatConfig",

    # django-allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
AUTH_USER_MODEL = "users.CustomUser"
ACCOUNT_FORMS   = {"signup": "users.forms.SignupForm"}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates",
            BASE_DIR / "allauth",
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [ BASE_DIR / "static" ]

MEDIA_URL   = "/media/"
MEDIA_ROOT  = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
